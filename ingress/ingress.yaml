apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: non-card-prod-ingress
  namespace: prod
  annotations:
    alb.ingress.kubernetes.io/actions.ssl-redirect: '{"Type": "redirect", "RedirectConfig":
      { "Protocol": "HTTPS", "Port": "443", "StatusCode": "HTTP_301"}}'
    alb.ingress.kubernetes.io/backend-protocol: HTTP
    alb.ingress.kubernetes.io/certificate-arn: arn:aws:acm:us-east-1:211125389065:certificate/128771a7-564d-4f90-858a-efd353f86297
    alb.ingress.kubernetes.io/group.name: alb-group
    alb.ingress.kubernetes.io/healthcheck-path: /docs
    alb.ingress.kubernetes.io/listen-ports: '[{"HTTP":80}, {"HTTPS":443}]'
    alb.ingress.kubernetes.io/load-balancer-name: non-card-prod-production
    alb.ingress.kubernetes.io/scheme: internet-facing
    alb.ingress.kubernetes.io/subnets: subnet-054736534e95c9f69, subnet-023bffce176aab303
    alb.ingress.kubernetes.io/target-type: ip
    kubernetes.io/ingress.class: alb
    alb.ingress.kubernetes.io/wafv2-acl-arn: arn:aws:wafv2:us-east-1:211125389065:regional/webacl/staging-api-getmcard-waf/773b69f2-08a8-451b-b99e-4c6bb8c78109
spec:
  ingressClassName: alb
  rules:
    - host: api.getmcard.com
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: non-card-prod-service
                port:
                  number: 8080
